{
  "name": "Ask Foreman - Document Upload Complete",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ask-foreman/process",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Document Upload Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "ask-foreman-process"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced file extraction with proper error handling and FCS-OriginalClients path\nconst input = $input.all()[0];\nconst body = input.json?.body || {};\nconst files = input.json?.files || [];\nconst binary = input.binary || {};\n\nlet file = null;\nlet fileName = '';\nlet fileSize = 0;\nlet mimeType = '';\nlet fileData = null;\n\n// Try multiple methods to find the uploaded file\nif (files && files.length > 0) {\n    file = files[0];\n    fileName = file.filename || file.name || 'unknown';\n    fileSize = file.size || 0;\n    mimeType = file.mimetype || file.type || 'application/octet-stream';\n    fileData = file.data || file;\n} else if (binary && Object.keys(binary).length > 0) {\n    const binaryKey = Object.keys(binary)[0];\n    file = binary[binaryKey];\n    fileName = body.fileName || file.fileName || binaryKey || 'unknown';\n    fileSize = file.data ? file.data.length : 0;\n    mimeType = file.mimeType || body.mimeType || 'application/octet-stream';\n    fileData = file.data || file;\n} else if (body.file) {\n    file = body.file;\n    fileName = body.fileName || file.filename || 'unknown';\n    fileSize = body.fileSize || file.size || 0;\n    mimeType = body.mimeType || file.mimetype || 'application/octet-stream';\n    fileData = file;\n}\n\n// Validate required fields\nif (!body.client) {\n    throw new Error('Client is required');\n}\n\nif (!body.category) {\n    throw new Error('Category is required');\n}\n\n// Keep original capitalization for client folder\nlet actualClientFolder = body.client;\n\n// Generate unique file ID and paths\nconst timestamp = Date.now();\nconst sanitizedFileName = fileName.replace(/[^a-zA-Z0-9.-]/g, '_');\nconst fileId = `${body.client}_${body.category}_${sanitizedFileName}_${timestamp}`;\n\n// Define blob paths - IMPORTANT: Use FCS-OriginalClients prefix with proper capitalization\nconst originalBlobPath = `FCS-OriginalClients/${actualClientFolder}/${body.category}/${sanitizedFileName}`;\nconst convertedBlobPath = `FCS-OriginalClients/${actualClientFolder}/${body.category}/${sanitizedFileName.replace(/\\.[^/.]+$/, '')}.txt`;\nconst metadataPath = `FCS-OriginalClients/${actualClientFolder}/.metadata/${fileId}.json`;\n\nreturn [{\n    json: {\n        operation: 'CREATE',\n        fileId: fileId,\n        fileName: fileName,\n        sanitizedFileName: sanitizedFileName,\n        originalFileName: fileName,\n        fileSize: fileSize,\n        mimeType: mimeType,\n        client: body.client,\n        actualClientFolder: actualClientFolder,\n        category: body.category,\n        uploadTimestamp: new Date().toISOString(),\n        originalBlobPath: originalBlobPath,\n        convertedBlobPath: convertedBlobPath,\n        metadataPath: metadataPath,\n        blobUrl: `https://saxtechfcs.blob.core.windows.net/fcs-clients/${originalBlobPath}`,\n        convertedUrl: `https://saxtechfcs.blob.core.windows.net/fcs-convertedclients/${convertedBlobPath}`,\n        fileData: fileData\n    },\n    binary: binary\n}];"
      },
      "id": "extract-node",
      "name": "Extract & Validate Upload Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.blobUrl }}?sp=racwdl&st=2025-08-08T05:00:57Z&se=2030-08-08T13:15:57Z&spr=https&sv=2024-11-04&sr=c&sig=lJKK9jDZ59pJSNkKSgwaQIrCdBaJzx4XPzgEB2%2FrnIg%3D",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-ms-blob-type",
              "value": "BlockBlob"
            },
            {
              "name": "Content-Type",
              "value": "={{ $json.mimeType }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "={{ $json.mimeType }}",
        "sendBinaryData": true,
        "binaryPropertyName": "data",
        "options": {
          "timeout": 60000
        }
      },
      "id": "upload-original",
      "name": "Upload Original to Azure Blob",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://workflows.saxtechnology.com/webhook/ask-foreman/convert-to-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"BlobUrl\": \"={{ $json.blobUrl }}\",\n  \"FileName\": \"={{ $json.sanitizedFileName }}\",\n  \"Client\": \"={{ $json.client }}\",\n  \"Category\": \"={{ $json.category }}\",\n  \"OriginalFileName\": \"={{ $json.originalFileName }}\",\n  \"FileId\": \"={{ $json.fileId }}\",\n  \"MimeType\": \"={{ $json.mimeType }}\"\n}",
        "options": {
          "timeout": 120000,
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "convert-text",
      "name": "Convert Document to Text",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.convertedUrl }}?sp=racwdl&st=2025-08-08T05:00:57Z&se=2030-08-08T13:15:57Z&spr=https&sv=2024-11-04&sr=c&sig=lJKK9jDZ59pJSNkKSgwaQIrCdBaJzx4XPzgEB2%2FrnIg%3D",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-ms-blob-type",
              "value": "BlockBlob"
            },
            {
              "name": "Content-Type",
              "value": "text/plain"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "text/plain",
        "body": "={{ $json.extractedText || $json.text || $json.content || '' }}",
        "options": {
          "timeout": 30000
        }
      },
      "id": "upload-text",
      "name": "Upload Converted Text to Blob",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://workflows.saxtechnology.com/webhook/ask-foreman/index-document",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"documentId\": \"={{ $json.fileId }}\",\n  \"content\": \"={{ $json.extractedText || $json.text || $json.content || '' }}\",\n  \"metadata\": {\n    \"client\": \"={{ $json.client }}\",\n    \"category\": \"={{ $json.category }}\",\n    \"fileName\": \"={{ $json.originalFileName }}\",\n    \"uploadDate\": \"={{ $json.uploadTimestamp }}\",\n    \"blobUrl\": \"={{ $json.blobUrl }}\",\n    \"convertedUrl\": \"={{ $json.convertedUrl }}\"\n  }\n}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "index-vector",
      "name": "Index in Vector Database",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"message\": \"Document processed successfully\",\n  \"fileId\": \"={{ $('extract-node').item.json.fileId }}\",\n  \"fileName\": \"={{ $('extract-node').item.json.originalFileName }}\",\n  \"client\": \"={{ $('extract-node').item.json.client }}\",\n  \"category\": \"={{ $('extract-node').item.json.category }}\",\n  \"blobUrl\": \"={{ $('extract-node').item.json.blobUrl }}\",\n  \"indexed\": true,\n  \"timestamp\": \"={{ $('extract-node').item.json.uploadTimestamp }}\"\n}",
        "options": {}
      },
      "id": "respond-node",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1450, 300]
    }
  ],
  "connections": {
    "Document Upload Webhook": {
      "main": [
        [
          {
            "node": "Extract & Validate Upload Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract & Validate Upload Data": {
      "main": [
        [
          {
            "node": "Upload Original to Azure Blob",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Original to Azure Blob": {
      "main": [
        [
          {
            "node": "Convert Document to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Document to Text": {
      "main": [
        [
          {
            "node": "Upload Converted Text to Blob",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Converted Text to Blob": {
      "main": [
        [
          {
            "node": "Index in Vector Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Index in Vector Database": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "askforeman-upload-workflow"
}
