{
  "name": "Document Upload with CORS",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ask-foreman/process",
        "responseMode": "responseNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "GET, POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type, Authorization"
              }
            ]
          }
        }
      },
      "id": "webhook_upload",
      "name": "Webhook - Upload Document",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract form data\nconst formData = $input.first().json.body;\nconst clientId = formData.client;\nconst category = formData.category;\nconst fileName = $input.first().binary.data.fileName;\nconst fileData = $input.first().binary.data;\n\n// Azure Storage configuration\nconst storageAccount = 'saxtechfcs';\nconst containerName = 'fcs-clients';\nconst sasToken = 'sp=racwdl&st=2025-08-08T05:00:57Z&se=2030-08-08T13:15:57Z&spr=https&sv=2024-11-04&sr=c&sig=lJKK9jDZ59pJSNkKSgwaQIrCdBaJzx4XPzgEB2%2FrnIg%3D';\n\n// Map category to folder name\nconst categoryMap = {\n  'drawings': 'Drawings',\n  'estimates': 'Estimates',\n  'proposals': 'Proposals',\n  'specs': 'Specs',\n  'signed-contracts': 'Signed-Contracts'\n};\n\nconst folderName = categoryMap[category] || 'Documents';\n\n// Construct blob path\nconst blobPath = `FCS-OriginalClients/${clientId}/${folderName}/${fileName}`;\nconst uploadUrl = `https://${storageAccount}.blob.core.windows.net/${containerName}/${blobPath}?${sasToken}`;\n\nreturn {\n  json: {\n    clientId,\n    category,\n    folderName,\n    fileName,\n    blobPath,\n    uploadUrl\n  },\n  binary: {\n    data: fileData\n  }\n};"
      },
      "id": "prepare_upload",
      "name": "Prepare Upload Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.uploadUrl }}",
        "sendBinaryData": true,
        "binaryPropertyName": "data",
        "options": {
          "headers": {
            "x-ms-blob-type": "BlockBlob",
            "x-ms-meta-clientId": "={{ $json.clientId }}",
            "x-ms-meta-category": "={{ $json.category }}",
            "x-ms-meta-uploadDate": "={{ new Date().toISOString() }}"
          }
        }
      },
      "id": "upload_to_azure",
      "name": "Upload to Azure Storage",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://askforemanfunctions.azurewebsites.net/api/ConvertDocumentToText",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "BlobUrl",
              "value": "=https://saxtechfcs.blob.core.windows.net/fcs-clients/{{ $('prepare_upload').item.json.blobPath }}"
            },
            {
              "name": "FileName",
              "value": "={{ $('prepare_upload').item.json.fileName }}"
            }
          ]
        },
        "options": {
          "headers": {
            "x-functions-key": "AIzaSyDQ_________________________________________________"
          }
        }
      },
      "id": "convert_document",
      "name": "Convert Document",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "jsCode": "// Get conversion result\nconst convertedText = $input.first().json.text || $input.first().json.content || $input.first().json;\nconst uploadData = $('prepare_upload').first().json;\n\n// Prepare converted file path\nconst textFileName = uploadData.fileName.replace(/\\.[^.]+$/, '.txt');\nconst convertedPath = `FCS-ConvertedClients/${uploadData.clientId}/${uploadData.folderName}/${textFileName}`;\n\nconst storageAccount = 'saxtechfcs';\nconst containerName = 'fcs-clients';\nconst sasToken = 'sp=racwdl&st=2025-08-08T05:00:57Z&se=2030-08-08T13:15:57Z&spr=https&sv=2024-11-04&sr=c&sig=lJKK9jDZ59pJSNkKSgwaQIrCdBaJzx4XPzgEB2%2FrnIg%3D';\n\nconst uploadUrl = `https://${storageAccount}.blob.core.windows.net/${containerName}/${convertedPath}?${sasToken}`;\n\n// Convert text to buffer\nconst textBuffer = Buffer.from(JSON.stringify(convertedText));\n\nreturn {\n  json: {\n    convertedPath,\n    uploadUrl,\n    originalFile: uploadData.fileName,\n    textFileName\n  },\n  binary: {\n    data: {\n      data: textBuffer.toString('base64'),\n      mimeType: 'text/plain',\n      fileName: textFileName\n    }\n  }\n};"
      },
      "id": "prepare_converted",
      "name": "Prepare Converted Text",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.uploadUrl }}",
        "sendBinaryData": true,
        "binaryPropertyName": "data",
        "options": {
          "headers": {
            "x-ms-blob-type": "BlockBlob",
            "x-ms-meta-originalFile": "={{ $json.originalFile }}",
            "x-ms-meta-convertedDate": "={{ new Date().toISOString() }}",
            "Content-Type": "text/plain"
          }
        }
      },
      "id": "upload_converted",
      "name": "Upload Converted Text",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "values": {
          "values": [
            {
              "name": "success",
              "value": "=true"
            },
            {
              "name": "message",
              "value": "Document processed successfully"
            },
            {
              "name": "originalPath",
              "value": "={{ $('prepare_upload').item.json.blobPath }}"
            },
            {
              "name": "convertedPath",
              "value": "={{ $('prepare_converted').item.json.convertedPath }}"
            },
            {
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare_response",
      "name": "Set Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "GET, POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "respond_to_webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1650, 300]
    }
  ],
  "connections": {
    "webhook_upload": {
      "main": [
        [
          {
            "node": "prepare_upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepare_upload": {
      "main": [
        [
          {
            "node": "upload_to_azure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload_to_azure": {
      "main": [
        [
          {
            "node": "convert_document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert_document": {
      "main": [
        [
          {
            "node": "prepare_converted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepare_converted": {
      "main": [
        [
          {
            "node": "upload_converted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload_converted": {
      "main": [
        [
          {
            "node": "prepare_response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepare_response": {
      "main": [
        [
          {
            "node": "respond_to_webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateId": "document-upload-cors"
  },
  "pinData": {},
  "versionId": "cors-v1",
  "triggerCount": 0,
  "tags": []
}
