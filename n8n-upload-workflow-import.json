{
  "name": "Ask Foreman Upload Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ask-foreman/upload",
        "responseMode": "responseNode",
        "options": {
          "binaryData": false,
          "rawBody": false
        }
      },
      "id": "webhook-upload",
      "name": "Upload Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "ask-foreman-upload"
    },
    {
      "parameters": {
        "jsCode": "// Extract and prepare file data from webhook\nconst inputItem = $input.first();\nconst json = inputItem.json || {};\n\n// Handle both direct JSON and nested body\nconst data = json.body || json;\n\n// Extract file data and metadata\nconst fileData = data.file || data.fileBase64 || '';\nconst fileName = data.fileName || 'document.pdf';\nconst mimeType = data.mimeType || 'application/pdf';\nconst category = data.category || 'uncategorized';\nconst client = data.client || 'general';\nconst clientName = data.clientName || client;\n\nif (!fileData) {\n    throw new Error('No file data provided in upload request');\n}\n\n// Convert base64 to buffer\nconst buffer = Buffer.from(fileData, 'base64');\nconst fileSize = buffer.length;\n\n// Generate safe file names and paths\nconst safeName = fileName.replace(/[^a-zA-Z0-9.-]/g, '_');\nconst timestamp = Date.now();\n\n// Azure blob paths\nconst originalPath = `${client}/${category}/original/${safeName}`;\nconst convertedPath = `${client}/${category}/converted/${safeName.replace(/\\.pdf$/i, '')}.json`;\n\nconsole.log(`Processing: ${fileName} (${(fileSize/1024).toFixed(2)}KB) for client: ${client}`);\n\nreturn {\n    json: {\n        fileName: fileName,\n        safeName: safeName,\n        mimeType: mimeType,\n        category: category,\n        client: client,\n        clientName: clientName,\n        fileSize: fileSize,\n        isLargeFile: fileSize > 10 * 1024 * 1024,\n        originalPath: originalPath,\n        convertedPath: convertedPath,\n        uploadedAt: new Date().toISOString(),\n        fileBase64: fileData,\n        // Azure URLs\n        originalBlobUrl: `https://saxforeman.blob.core.windows.net/askforeman/${originalPath}`,\n        convertedBlobUrl: `https://saxforeman.blob.core.windows.net/askforeman/${convertedPath}`,\n        // Function app URL\n        functionAppUrl: `https://askforemanconverter.azurewebsites.net/api/DocumentConverterHTTP`,\n        timestamp: timestamp\n    },\n    binary: {\n        data: {\n            data: buffer,\n            mimeType: mimeType,\n            fileName: fileName,\n            fileExtension: fileName.split('.').pop() || 'pdf'\n        }\n    }\n};"
      },
      "id": "prepare-file",
      "name": "Prepare File Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.isLargeFile }}",
              "value2": true
            }
          ]
        }
      },
      "id": "router-size",
      "name": "Check File Size",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://saxforeman.blob.core.windows.net/askforeman/{{ $json.originalPath }}",
        "sendBody": true,
        "bodyContentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {
          "timeout": 60000
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "x-ms-blob-type",
              "value": "BlockBlob"
            },
            {
              "name": "x-ms-blob-content-type",
              "value": "={{ $binary.data.mimeType }}"
            },
            {
              "name": "x-ms-version",
              "value": "2020-10-02"
            }
          ]
        }
      },
      "id": "upload-original-small",
      "name": "Upload Original (Small)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 200]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://saxforeman.blob.core.windows.net/askforeman/{{ $json.originalPath }}",
        "sendBody": true,
        "bodyContentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {
          "timeout": 300000,
          "batching": {
            "batch": {
              "batchSize": 1
            }
          }
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "x-ms-blob-type",
              "value": "BlockBlob"
            },
            {
              "name": "x-ms-blob-content-type",
              "value": "={{ $binary.data.mimeType }}"
            },
            {
              "name": "x-ms-version",
              "value": "2020-10-02"
            }
          ]
        }
      },
      "id": "upload-original-large",
      "name": "Upload Original (Large)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://askforemanconverter.azurewebsites.net/api/DocumentConverterHTTP",
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"BlobUrl\": \"{{ $json.originalBlobUrl }}\",\n  \"FileName\": \"{{ $json.fileName }}\",\n  \"Client\": \"{{ $json.client }}\",\n  \"Category\": \"{{ $json.category }}\"\n}",
        "options": {
          "timeout": 120000
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-functions-key",
              "value": "YOUR_FUNCTION_KEY_HERE"
            }
          ]
        }
      },
      "id": "convert-document",
      "name": "Convert Document",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process conversion result and prepare for indexing\nconst item = $input.first();\nconst json = item.json;\n\n// Extract converted content from function app response\nconst conversionResult = json.body || json;\nconst convertedContent = conversionResult.content || conversionResult.text || JSON.stringify(conversionResult);\n\n// Prepare document for Azure Search indexing\nconst docId = `${json.client}_${json.category}_${json.fileName}`.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase();\n\nconst indexDocument = {\n    \"@search.action\": \"upload\",\n    \"id\": docId,\n    \"content\": convertedContent,\n    \"client\": json.client,\n    \"clientName\": json.clientName,\n    \"category\": json.category,\n    \"fileName\": json.fileName,\n    \"filePath\": json.originalPath,\n    \"fileSize\": json.fileSize,\n    \"mimeType\": json.mimeType,\n    \"uploadedAt\": json.uploadedAt,\n    \"metadata_storage_path\": json.originalPath,\n    \"metadata_storage_name\": json.fileName,\n    \"metadata_storage_content_type\": json.mimeType,\n    \"metadata_storage_size\": json.fileSize,\n    \"metadata_storage_last_modified\": json.uploadedAt\n};\n\nreturn {\n    json: {\n        ...json,\n        documentId: docId,\n        indexDocument: indexDocument,\n        convertedContent: convertedContent,\n        conversionSuccess: true\n    }\n};"
      },
      "id": "prepare-index",
      "name": "Prepare Index Document",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://saxaisearch.search.windows.net/indexes/azureblob-index2/docs/index?api-version=2021-04-30-Preview",
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"value\": [{{ JSON.stringify($json.indexDocument) }}]\n}",
        "options": {
          "timeout": 30000
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "api-key",
              "value": "UsSBLISH5UsbNGeUkBeCa1YZJ0SJPfRJwXBrAWY7kSAzSeABQBCv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "index-document",
      "name": "Index to Azure Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Prepare upload result and save converted content\nconst item = $input.first();\nconst json = item.json;\n\n// Create converted document JSON\nconst convertedDoc = {\n    fileName: json.fileName,\n    client: json.client,\n    clientName: json.clientName,\n    category: json.category,\n    uploadedAt: json.uploadedAt,\n    fileSize: json.fileSize,\n    mimeType: json.mimeType,\n    content: json.convertedContent,\n    originalPath: json.originalPath,\n    convertedPath: json.convertedPath,\n    documentId: json.documentId,\n    metadata: {\n        processed: true,\n        processedAt: new Date().toISOString(),\n        conversionSuccess: json.conversionSuccess\n    }\n};\n\n// Convert to buffer for storage\nconst jsonString = JSON.stringify(convertedDoc, null, 2);\nconst jsonBuffer = Buffer.from(jsonString);\n\nreturn {\n    json: {\n        ...json,\n        uploadSuccess: true,\n        indexSuccess: true\n    },\n    binary: {\n        converted: {\n            data: jsonBuffer,\n            mimeType: 'application/json',\n            fileName: json.safeName.replace(/\\.pdf$/i, '.json'),\n            fileExtension: 'json'\n        }\n    }\n};"
      },
      "id": "prepare-converted",
      "name": "Prepare Converted Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1650, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://saxforeman.blob.core.windows.net/askforeman/{{ $json.convertedPath }}",
        "sendBody": true,
        "bodyContentType": "binaryData",
        "inputDataFieldName": "converted",
        "options": {
          "timeout": 60000
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "x-ms-blob-type",
              "value": "BlockBlob"
            },
            {
              "name": "x-ms-blob-content-type",
              "value": "application/json"
            },
            {
              "name": "x-ms-version",
              "value": "2020-10-02"
            }
          ]
        }
      },
      "id": "upload-converted",
      "name": "Upload Converted to Azure",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1850, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"File uploaded and indexed successfully\",\n  \"data\": {\n    \"fileName\": \"{{ $json.fileName }}\",\n    \"client\": \"{{ $json.client }}\",\n    \"category\": \"{{ $json.category }}\",\n    \"fileSize\": {{ $json.fileSize }},\n    \"originalPath\": \"{{ $json.originalPath }}\",\n    \"convertedPath\": \"{{ $json.convertedPath }}\",\n    \"documentId\": \"{{ $json.documentId }}\",\n    \"uploadedAt\": \"{{ $json.uploadedAt }}\",\n    \"indexed\": true\n  }\n}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "respond-success",
      "name": "Upload Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2050, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"{{ $json.error || 'Upload failed' }}\",\n  \"message\": \"{{ $json.message || 'An error occurred during file upload' }}\"\n}",
        "options": {
          "responseCode": 500,
          "responseHeaders": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "respond-error",
      "name": "Upload Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1450, 500]
    }
  ],
  "connections": {
    "Upload Webhook": {
      "main": [
        [
          {
            "node": "Prepare File Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare File Data": {
      "main": [
        [
          {
            "node": "Check File Size",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Size": {
      "main": [
        [
          {
            "node": "Upload Original (Small)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Upload Original (Large)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Original (Small)": {
      "main": [
        [
          {
            "node": "Convert Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Original (Large)": {
      "main": [
        [
          {
            "node": "Convert Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Document": {
      "main": [
        [
          {
            "node": "Prepare Index Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Index Document": {
      "main": [
        [
          {
            "node": "Index to Azure Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Index to Azure Search": {
      "main": [
        [
          {
            "node": "Prepare Converted Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Converted Data": {
      "main": [
        [
          {
            "node": "Upload Converted to Azure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Converted to Azure": {
      "main": [
        [
          {
            "node": "Upload Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "pinData": {},
  "versionId": "v1"
}
